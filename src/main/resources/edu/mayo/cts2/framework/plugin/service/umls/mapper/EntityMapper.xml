<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="edu.mayo.cts2.framework.plugin.service.umls.mapper.EntityMapper">

  <select id="getConceptDTO" 
  	resultType="edu.mayo.cts2.framework.plugin.service.umls.mapper.ConceptDTO" 
  	parameterType="string">
    	select 
			concepts.ui, string_info.name
		from  Concepts concepts
		inner join
			Atom_Clusters atom_clusters on concepts.id = atom_clusters.id
	    inner join
	      Atoms atoms on atom_clusters.default_pref_atom_id = atoms.id
	    inner join
	      String_Info string_info on atoms.string_info_id = string_info.id
	    where
	    	concepts.ui = #{cui}
  </select>

  <select id="getCodeDTOById" 
  	resultType="edu.mayo.cts2.framework.plugin.service.umls.mapper.CodeDTO" parameterType="string">
	select distinct c.ui, c.id, rs.abbreviation, si.name, lx.language
		from  Concepts c, Atom_Clusters ac, Atoms a, root_sources rs, string_info si, lexical_info lx
     where
     	c.id = a.concept_id and
      	a.string_info_id = si.id and
     	c.id = ac.id  and
     	si.lexical_info_id = lx.id and
      	c.id = #{id} and
        a.id = ac.default_pref_atom_id
  </select>
  
  <select id="getCodeDTOByIdSab" 
  	resultType="edu.mayo.cts2.framework.plugin.service.umls.mapper.CodeDTO" parameterType="string">
    select c.ui, c.id, rs.abbreviation, si.name, lx.language,
    (case when (a.id = ac.default_pref_atom_id) then 'yes' else 'no' end) as isPreferred
		from  Concepts c, Atom_Clusters ac, Atoms a, root_sources rs, string_info si, lexical_info lx
     where
     	c.id = a.concept_id and
      	a.string_info_id = si.id and
     	c.id = ac.id  and
     	si.lexical_info_id = lx.id and
      	c.id = #{id}  and
      	rs.abbreviation = #{sab}
      	order by isPreferred desc
  </select>
  
  <select id="streamEntities" 
  	resultType="edu.mayo.cts2.framework.plugin.service.umls.mapper.AtomRowDTO">
select 
			c.UI as UI, 
			c.ROOT_SOURCE as ROOTSOURCE,
      srcs.abbreviation as source,
      s.NAME as STRING
		from Codes c
		inner join
			Atoms a on c.id = a.code_id
		inner join
			String_Info s on a.string_info_id = s.id
    inner join
     source_descriptors sd on sd.id = a.source_descriptor_id
    inner join 
     sources srcs on srcs.root_source = c.root_source
		order by c.ROOT_SOURCE
  </select>

</mapper>